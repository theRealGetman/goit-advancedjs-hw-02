{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nstartBtn.disabled = true;\nconst days = document.querySelectorAll('[data-days]');\nconst hours = document.querySelectorAll('[data-hours]');\nconst minutes = document.querySelectorAll('[data-minutes]');\nconst seconds = document.querySelectorAll('[data-seconds]');\n\n// Select date\nlet selectedDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const date = selectedDates[0];\n    if (date < new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n      });\n      startBtn.disabled = true;\n    } else {\n      selectedDate = date;\n      startBtn.disabled = false;\n    }\n    console.log(selectedDate);\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\n// Start timer\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  dateTimePicker.disabled = true;\n\n  const timeId = setInterval(() => {\n    const deltaTime = selectedDate - new Date();\n    const time = convertMs(deltaTime);\n    days[0].textContent = addLeadingZero(time.days);\n    hours[0].textContent = addLeadingZero(time.hours);\n    minutes[0].textContent = addLeadingZero(time.minutes);\n    seconds[0].textContent = addLeadingZero(time.seconds);\n    if (deltaTime <= 1000) {\n      clearInterval(timeId);\n      dateTimePicker.disabled = false;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["dateTimePicker","startBtn","days","hours","minutes","seconds","selectedDate","options","selectedDates","date","iziToast","flatpickr","timeId","deltaTime","time","convertMs","addLeadingZero","ms","value"],"mappings":"+IAKA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GACpB,MAAMC,EAAO,SAAS,iBAAiB,aAAa,EAC9CC,EAAQ,SAAS,iBAAiB,cAAc,EAChDC,EAAU,SAAS,iBAAiB,gBAAgB,EACpDC,EAAU,SAAS,iBAAiB,gBAAgB,EAG1D,IAAIC,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAOD,EAAc,CAAC,EACxBC,EAAO,IAAI,MACbC,EAAS,MAAM,CACb,QAAS,oCACjB,CAAO,EACDT,EAAS,SAAW,KAEpBK,EAAeG,EACfR,EAAS,SAAW,IAEtB,QAAQ,IAAIK,CAAY,CACzB,CACH,EAEAK,EAAUX,EAAgBO,CAAO,EAGjCN,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAe,SAAW,GAE1B,MAAMY,EAAS,YAAY,IAAM,CAC/B,MAAMC,EAAYP,EAAe,IAAI,KAC/BQ,EAAOC,EAAUF,CAAS,EAChCX,EAAK,CAAC,EAAE,YAAcc,EAAeF,EAAK,IAAI,EAC9CX,EAAM,CAAC,EAAE,YAAca,EAAeF,EAAK,KAAK,EAChDV,EAAQ,CAAC,EAAE,YAAcY,EAAeF,EAAK,OAAO,EACpDT,EAAQ,CAAC,EAAE,YAAcW,EAAeF,EAAK,OAAO,EAChDD,GAAa,MACf,cAAcD,CAAM,EACpBZ,EAAe,SAAW,GAE7B,EAAE,GAAI,CACT,CAAC,EAED,SAASe,EAAUE,EAAI,CAQrB,MAAMf,EAAO,KAAK,MAAMe,EAAK,KAAG,EAE1Bd,EAAQ,KAAK,MAAOc,EAAK,MAAO,IAAI,EAEpCb,EAAU,KAAK,MAAQa,EAAK,MAAO,KAAQ,GAAM,EAEjDZ,EAAU,KAAK,MAASY,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAf,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASW,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}